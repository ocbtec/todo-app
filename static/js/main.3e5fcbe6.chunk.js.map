{"version":3,"sources":["components/Header.js","components/ToDoForm.js","components/ToDoItem.js","components/ToDoList.js","helpers.js","modules/Storage.js","components/App.js","components/Help.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","className","tagline","ToDoForm","textInput","React","createRef","handleSubmit","e","preventDefault","text","current","value","trim","addToDo","currentTarget","reset","onSubmit","this","type","placeholder","ref","aria-hidden","Component","ToDoItem","keyCode","target","blur","todo","data","data-id","uuid","id","checked","done","onChange","toggleToDoDone","htmlFor","updateToDoText","onKeyUp","handleKeyUp","onClick","removeToDo","ToDoList","Fragment","Object","keys","items","map","key","getRandomTagline","Math","floor","random","length","canUseLocalStorage","Error","localStorage","setItem","defaultValue","getItem","removeItem","App","setState","state","toDoItems","checkbox","storageKey","old","Storage","get","JSON","parse","set","stringify","Help","document","title","NotFound","Router","basename","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e5fcbe6.chunk.js","sourcesContent":["import React from \"react\";\n\n// Class Component\n// class Header extends React.Component {\n//     render() {\n//         return (\n//             <header className=\"header\">\n//                 <h1>What to do?</h1>\n//                 <span className=\"tagline\">{this.props.tagline}</span>\n//             </header>\n//         );\n//     }\n// }\n\n// Functional Component\nconst Header = props => {\n    return (\n        <header className=\"header\">\n            <h1>What to do?</h1>\n            <span className=\"tagline\">{props.tagline}</span>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\n\nclass ToDoForm extends React.Component {\n    // constructor is not needed when using an arrow function -> handleSubmit\n    // constructor(props) {\n    //     super(props);\n    //     this.handleSubmit = this.handleSubmit.bind(this);\n    // }\n\n    textInput = React.createRef();\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const text = this.textInput.current.value.trim();\n        this.props.addToDo(text);\n        e.currentTarget.reset();\n    };\n\n    render() {\n        return (\n            <form className=\"input-group my-3\" onSubmit={this.handleSubmit}>\n                <input className=\"form-control\" type=\"text\" placeholder=\"Add a new todo item...\" ref={this.textInput} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-outline-secondary\" type=\"submit\">\n                        <i className=\"fas fa-plus\" aria-hidden=\"true\" />\n                        &nbsp;Add Item\n                    </button>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default ToDoForm;\n","import React from \"react\";\n\nclass ToDoItem extends React.Component {\n    handleKeyUp(e) {\n        // remove focus when [Enter] key is pressed\n        if (e.keyCode === 13) {\n            e.target.blur();\n        }\n    }\n    render() {\n        const todo = this.props.data;\n\n        return (\n            <tr className=\"todo-item\" data-id={todo.uuid}>\n                <td>\n                    <div className=\"custom-control custom-checkbox\">\n                        <input\n                            className=\"custom-control-input\"\n                            value={todo.uuid}\n                            id={`todo-done-${todo.uuid}`}\n                            type=\"checkbox\"\n                            checked={todo.done}\n                            onChange={this.props.toggleToDoDone}\n                        />\n                        <label className=\"custom-control-label\" htmlFor={`todo-done-${todo.uuid}`}>\n                            &nbsp;\n                        </label>\n                    </div>\n                </td>\n                <td className=\"col-1\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={todo.text}\n                        onChange={e => {\n                            this.props.updateToDoText(todo.uuid, e.target.value);\n                        }}\n                        onKeyUp={e => {\n                            this.handleKeyUp(e);\n                        }}\n                    />\n                </td>\n                <td className=\"col-action\">\n                    <i className=\"icon-remove far fa-trash-alt\" onClick={e => this.props.removeToDo(todo.uuid)} />\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default ToDoItem;\n","import React from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n\nclass ToDoList extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"todo-list \">\n                    <table className=\"todo-items table table-borderless\">\n                        <tbody>\n                            {Object.keys(this.props.items).map(uuid => (\n                                <ToDoItem\n                                    key={`todo-item-${uuid}`}\n                                    data={this.props.items[uuid]}\n                                    updateToDoText={this.props.updateToDoText}\n                                    toggleToDoDone={this.props.toggleToDoDone}\n                                    removeToDo={this.props.removeToDo}\n                                />\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ToDoList;\n","export function randomArrayItem(data) {\n    return data[Math.floor(Math.random() * data.length)];\n}\n\nexport function getRandomTagline() {\n    const taglines = [\n        \"This could be your bucket List\",\n        \"This could be your shopping List\",\n        \"This could be your project List\"\n    ];\n    return randomArrayItem(taglines);\n}\n","class Storage {\n    constructor() {\n        if (!this.canUseLocalStorage()) {\n            throw Error(\"The local storage is full or disabled\");\n        }\n    }\n\n    set(key, value) {\n        localStorage.setItem(key, value);\n    }\n\n    get(key, defaultValue = null) {\n        const value = localStorage.getItem(key);\n\n        if (value !== null) {\n            return value;\n        }\n        return defaultValue;\n    }\n\n    canUseLocalStorage() {\n        let test = \"Test\";\n\n        try {\n            localStorage.setItem(test, test);\n            localStorage.removeItem(test);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport default new Storage();\n","import React from \"react\";\nimport Header from \"./Header\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDoList from \"./ToDoList\";\nimport uuid from \"uuid/v4\";\nimport { getRandomTagline } from \"../helpers.js\";\nimport Storage from \"../modules/Storage\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.storageKey = \"react-todo\";\n        const old = Storage.get(this.storageKey);\n\n        if (old) {\n            this.state = JSON.parse(old);\n        } else {\n            this.state = {\n                toDoItems: {}\n            };\n        }\n    }\n\n    componentDidUpdate() {\n        Storage.set(this.storageKey, JSON.stringify(this.state));\n    }\n\n    addToDo = text => {\n        const todo = {\n            uuid: uuid(),\n            text: text,\n            done: false\n        };\n        this.setState(state => {\n            state.toDoItems[todo.uuid] = todo;\n            return state;\n        });\n    };\n\n    updateToDoText = (uuid, text) => {\n        this.setState(state => {\n            state.toDoItems[uuid].text = text;\n            return state;\n        });\n    };\n\n    toggleToDoDone = e => {\n        const checkbox = e.target;\n        this.setState(state => {\n            state.toDoItems[checkbox.value].done = checkbox.checked;\n            return state;\n        });\n    };\n\n    removeToDo = uuid => {\n        this.setState(state => {\n            delete state.toDoItems[uuid];\n            return state;\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Header tagline={getRandomTagline()} />\n                <ToDoForm addToDo={this.addToDo} />\n                <ToDoList\n                    items={this.state.toDoItems}\n                    updateToDoText={this.updateToDoText}\n                    toggleToDoDone={this.toggleToDoDone}\n                    removeToDo={this.removeToDo}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport Header from \"./Header\";\n\nclass Help extends React.Component {\n    componentDidMount() {\n        document.title = \"Help | What to do?\";\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <Header tagline=\"Your questions will be answered here.\" />\n                <p>Where is the data stored</p>\n                <p>We store all information in your browsers' LocalStorage.</p>\n            </div>\n        );\n    }\n}\n\nexport default Help;\n","import React from \"react\";\nimport Header from \"./Header\";\n\nclass NotFound extends React.Component {\n    componentDiMount() {\n        document.title = \"Error 404 | What to do\";\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <Header tagline=\"404 - Page not found\" />\n                <div className=\"alert alert-warning\">\n                    <strong>\n                        Oops...sorry!\n                        <br />\n                    </strong>\n                    The requested page could not be found.\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport Help from \"./Help\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n    <HashRouter basename=\"/\">\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/help\" component={Help} />\n            <Route component={NotFound} />\n        </Switch>\n    </HashRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./components/App\";\nimport Router from \"./components/Router\";\nimport \"./sass/style.scss\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./sass/style.scss\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n"],"sourceRoot":""}